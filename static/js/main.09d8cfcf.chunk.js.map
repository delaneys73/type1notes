{"version":3,"sources":["rootReducer.js","store.js","containers/NavLink.js","config.js","containers/Header.js","containers/Footer.js","containers/Hero.js","views/Home.js","containers/Loading.js","views/Form/List.js","views/Form/Create.js","views/Form/Item/View.js","views/Form/Item/Edit.js","containers/Confirm.js","views/Form/Item/Delete.js","views/Form/Item/Submission/List.js","views/Form/Item/Submission/Item/View.js","views/Form/Item/Submission/Item/Edit.js","views/Form/Item/Submission/Item/Delete.js","views/Form/Item/Submission/Item/index.js","views/Form/Item/Submission/index.js","views/Form/Item/index.js","views/Form/index.js","views/Event/List.js","views/Event/Create.js","views/Event/Item/View.js","views/Event/Item/Edit.js","views/Event/Item/Delete.js","views/Event/Item/index.js","views/Event/index.js","views/Auth/Login.js","views/Auth/Register.js","views/Auth/Auth.js","App.js","components/CheckMatrix.js","components/ReactExample/ReactExample.jsx","components/ReactExample/ReactExample.settingsForm.js","components/index.js","index.js"],"names":["combineReducers","auth","form","name","forms","query","type","tags","submission","submissions","event","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","connectRouter","rootReducer","NavLink","this","props","to","location","exact","role","className","children","liClass","matchPath","pathname","path","strict","Link","Component","defaultProps","withRouter","PROJECT_URL","API_URL","window","search","substr","split","forEach","item","decodeURIComponent","AppConfig","projectUrl","apiUrl","AuthConfig","Header","logout","alt","src","height","is","hasOwnProperty","administrator","authenticated","onClick","connect","state","selectRoot","dispatch","push","Footer","style","padding","href","Hero","Home","user","data","email","List","getForms","onAction","errors","isActive","Loading","selectError","page","indexForms","action","_id","display","saveText","saveForm","newForm","err","View","hideComponents","onSubmit","options","url","title","template","iconset","noAlerts","ownProps","saveSubmission","match","params","formId","resetSubmissions","selectForm","onYes","onNo","message","yesText","noText","deleteForm","resetForms","goBack","getSubmissions","isLoading","aria-hidden","isFormActive","isSubActive","readOnly","Edit","deleteSubmission","submissionId","Item","Switch","Route","component","Delete","nextProps","prevState","getSubmission","id","Form","Submission","getForm","Create","length","_get","eventId","Login","onSubmitDone","setUser","Register","Auth","paddingBottom","borderBottom","App","Event","CheckMatrix","foo","tableClass","prop","content","i","numRows","row","j","numCols","cell","renderTemplate","input","ref","key","attr","class","element","refs","loadRefs","checks","Array","prototype","slice","call","addEventListener","updateValue","value","rowIndex","colIndex","col","checked","Base","schema","builderInfo","group","icon","weight","documentation","editForm","Example","setValue","setState","onChange","ReactExample","console","log","ReactDOM","render","dataValue","unmountComponentAtNode","ReactComponent","label","extend","baseEditForm","components","ignore","checkmatrix","reactexample","Formio","setProjectUrl","setBaseUrl","Components","setComponents","store","initAuth","document","getElementById"],"mappings":"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","file":"static/js/main.09d8cfcf.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { auth, form, forms, submission, submissions } from 'react-formio';\r\n\r\nexport default combineReducers({\r\n  auth: auth(),\r\n  form: form({name: 'form'}),\r\n  forms: forms({ name: 'forms', query: {type: 'form', tags: 'common'}}),\r\n  submission: submission({name: 'submission'}),\r\n  submissions: submissions({name: 'submissions'}),\r\n  event: combineReducers({\r\n    form: form({ name: 'event'}),\r\n    submission: submission({name: 'event'}),\r\n    submissions: submissions({name: 'event'}),\r\n  })\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport { createHashHistory as createHistory } from 'history'\r\nimport rootReducer from './rootReducer'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [thunk, routerMiddleware(history)]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension())\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nexport default createStore(\r\n  connectRouter(history)(rootReducer),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n","import React, {Component} from 'react';\r\nimport {Link, withRouter, matchPath} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass NavLink extends Component {\r\n  static propTypes = {\r\n    to: PropTypes.string.isRequired,\r\n    exact: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    exact: false\r\n  };\r\n\r\n  render() {\r\n    const {to, location, exact, role, className, children} = this.props;\r\n\r\n    const liClass = matchPath(location.pathname, {\r\n      path: to,\r\n      exact,\r\n      strict: false\r\n    }) ? 'nav-item active' : 'nav-item';\r\n\r\n    return (\r\n      <li className={liClass}>\r\n        <Link {...{to, role, className}}>{children}</Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(props => <NavLink {...props}/>)\r\n","var PROJECT_URL = 'https://xljjwoxrfytwbjb.form.io';\r\nvar API_URL = 'https://api.form.io';\r\n\r\nvar query = {};\r\nwindow.location.search.substr(1).split('&').forEach(function(item) {\r\n  query[item.split('=')[0]] = item.split('=')[1] && decodeURIComponent(item.split('=')[1]);\r\n});\r\n\r\nPROJECT_URL = query.projectUrl || PROJECT_URL;\r\nAPI_URL = query.apiUrl || API_URL;\r\n\r\nexport const AppConfig = {\r\n  projectUrl: PROJECT_URL,\r\n  apiUrl: API_URL\r\n};\r\n\r\nexport const AuthConfig = {\r\n  anonState: '/auth',\r\n  authState: '/',\r\n  login: {\r\n    form: 'user/login'\r\n  },\r\n  register: {\r\n    form: 'user/register'\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {PropTypes} from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {push} from \"connected-react-router\";\r\nimport NavLink from './NavLink';\r\nimport { selectRoot, logout } from \"react-formio\";\r\nimport {AuthConfig} from \"../config\";\r\n\r\nconst Header = class extends Component {\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {auth, logout} = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <img className=\"logo\" alt=\"Form.io\" src=\"https://portal.form.io/images/formio-logo.png\" height=\"25px\" />\r\n          </Link>\r\n          <ul className=\"nav navbar-nav mr-auto\">\r\n            <NavLink exact to=\"/\" role=\"navigation button\" className=\"nav-link\">\r\n              <span className=\"fa fa-home\" />\r\n            </NavLink>\r\n            { (auth.is.hasOwnProperty('administrator') && auth.is.administrator) ? (\r\n              <NavLink to=\"/form\" role=\"navigation link\" className=\"nav-link\">\r\n                <i className=\"fa fa-wpforms\"></i>&nbsp;\r\n                Forms\r\n              </NavLink>\r\n            ) : null }\r\n            { auth.authenticated ? (\r\n              <NavLink to=\"/event\" role=\"navigation link\" className=\"nav-link\">\r\n                <i className=\"fa fa-calendar\"></i>&nbsp;\r\n                Events\r\n              </NavLink>\r\n            ) : null }\r\n          </ul>\r\n          <ul className=\"nav navbar-nav ml-auto\">\r\n            { auth.authenticated ? (\r\n              <li className=\"nav-item\">\r\n                <span className=\"nav-link\" role=\"navigation link\" onClick={logout}>\r\n                  <span className=\"fa fa-sign-out\" />&nbsp;\r\n                  Logout\r\n                </span>\r\n              </li>\r\n            ) : (\r\n              <NavLink to=\"/auth\" role=\"navigation link\" className=\"nav-link\">\r\n                Login | Register\r\n              </NavLink>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: selectRoot('auth', state)\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => {\r\n      dispatch(logout());\r\n      dispatch(push(AuthConfig.anonState));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header)\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container text-center\" style={{padding: '15px'}}>\r\n          Built with ♥ by&nbsp;\r\n          <a href=\"https://form.io\">Form.io</a>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import { Form } from 'formiojs';\r\nimport React, {Component} from 'react';\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron text-center\" style={{'marginTop': '-40px'}}>\r\n        <Form src=\"https://xljjwoxrfytwbjb.form.io/bslnotes\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {PropTypes} from 'prop-types';\r\nimport Hero from '../containers/Hero';\r\nimport { selectRoot } from \"react-formio\";\r\n\r\nconst Home = class extends Component {\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    return (\r\n      <div>\r\n        <Hero />\r\n        <div className=\"container\">\r\n          { auth.authenticated ? (\r\n            <div className=\"well text-center\">\r\n              { (auth.user && auth.user.data) ?\r\n                (\r\n                  <h3>\r\n                    You are logged in as&nbsp;\r\n                    <strong>{ auth.user.data.email }</strong>\r\n                    !\r\n                  </h3>\r\n                ) : null\r\n              }\r\n            </div>) :\r\n            null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: selectRoot('auth', state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {};\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home)\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div>Loading...</div>\r\n)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { push } from 'connected-react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { indexForms, selectRoot, selectError, Errors, FormGrid } from 'react-formio';\r\nimport Loading from \"../../containers/Loading\";\r\n\r\nconst List = class extends Component {\r\n  componentWillMount() {\r\n    this.props.getForms(1);\r\n  }\r\n\r\n  render() {\r\n    const { forms, onAction, getForms, errors } = this.props;\r\n\r\n    if (forms.isActive) {\r\n      return (\r\n        <Loading />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Forms</h1>\r\n        <Errors errors={errors} />\r\n        <FormGrid\r\n          forms={forms}\r\n          onAction={onAction}\r\n          getForms={getForms}\r\n        />\r\n        <Link className=\"btn btn-primary\" to=\"/form/create\"><i className=\"fa fa-plus\"></i> Create Form</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    forms: selectRoot('forms', state),\r\n    errors: selectError('forms', state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getForms: (page, query) => {\r\n      dispatch(indexForms('forms', page, query))\r\n    },\r\n    onAction: (form, action) => {\r\n      switch(action) {\r\n        case 'view':\r\n          dispatch(push(`/form/${form._id}`));\r\n          break;\r\n        case 'submission':\r\n          dispatch(push(`/form/${form._id}/submission`));\r\n          break;\r\n        case 'edit':\r\n          dispatch(push(`/form/${form._id}/edit`));\r\n          break;\r\n        case 'delete':\r\n          dispatch(push(`/form/${form._id}/delete`));\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(List);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveForm, selectError, FormEdit, Errors } from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\n\r\nconst Create = props => {\r\n  return (\r\n    <div>\r\n      <h2>Create Form</h2>\r\n      <hr />\r\n      <Errors errors={props.errors} />\r\n      <FormEdit {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: {display: 'form'},\r\n    saveText: 'Create Form',\r\n    errors: selectError('form', state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveForm: (form) => {\r\n      const newForm = {\r\n        ...form,\r\n        tags: ['common'],\r\n      };\r\n      dispatch(saveForm('form', newForm, (err, form) => {\r\n        if (!err) {\r\n          dispatch(push(`/form/${form._id}`))\r\n        }\r\n      }))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Create)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors } from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../../containers/Loading';\r\n\r\nconst View = class extends Component {\r\n  render() {\r\n    const {\r\n      submission,\r\n      hideComponents,\r\n      onSubmit,\r\n      errors,\r\n      options,\r\n      form: {form, isActive, url}\r\n    } = this.props;\r\n\r\n    if (isActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>New { form.title }</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', state),\r\n    errors: [\r\n      selectError('form', state),\r\n      selectError('submission', state),\r\n    ],\r\n    options: {\r\n      noAlerts: true\r\n    },\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('submission'));\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveForm, selectForm, FormEdit, Errors, selectError } from 'react-formio';\r\n\r\nconst Edit = props => (\r\n  <div>\r\n    <h2>Edit {props.form.title} Form</h2>\r\n    <hr />\r\n    <Errors errors={props.errors} />\r\n    <FormEdit {...props} />\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectForm('form', state),\r\n    saveText: 'Save Form',\r\n    errors: selectError('form', state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveForm: (form) => dispatch(saveForm('form', form, (err, form) => {\r\n      if (!err) {\r\n        // TODO: Display a save success message here.\r\n      }\r\n    }))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Edit)\r\n","import React, { Component } from 'react';\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    const {onYes, onNo, message, yesText = 'Yes', noText = 'No'} = this.props;\r\n    return (\r\n      <div>\r\n        <h3>{message}</h3>\r\n        <div className=\"btn-toolbar\">\r\n          <span onClick={onYes} className=\"btn btn-danger\">{yesText}</span>\r\n          <span onClick={onNo} className=\"btn btn-default\">{noText}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Confirm from '../../../containers/Confirm';\r\nimport { deleteForm, resetForms, selectError, Errors } from 'react-formio';\r\nimport {push, goBack} from 'connected-react-router';\r\n\r\nconst Delete = props => (\r\n  <div>\r\n    <Errors errors={props.errors} />\r\n    <Confirm {...props} />\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    message: `Are you sure you wish to delete the form \"${state.form.form.title}\"?`,\r\n    errors: selectError('form', state),\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onYes: () => {\r\n      dispatch(deleteForm('form', ownProps.match.params.formId, (err) => {\r\n        if (!err) {\r\n          dispatch(resetForms('forms'));\r\n          dispatch(push('/form'));\r\n        }\r\n      }));\r\n    },\r\n    onNo: () => {\r\n      dispatch(goBack());\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Delete)\r\n","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport { getSubmissions, selectRoot, selectError, SubmissionGrid, Errors } from 'react-formio';\r\nimport Loading from '../../../../containers/Loading';\r\n\r\nconst List = class extends Component {\r\n  componentWillMount() {\r\n    this.props.getSubmissions(1);\r\n  }\r\n\r\n  render() {\r\n    const {match: {params: {formId}}} = this.props\r\n    const {form, submissions, isLoading, onAction, getSubmissions, errors} = this.props\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <Loading />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='form-index'>\r\n        <Errors errors={errors} />\r\n        <SubmissionGrid\r\n          submissions={submissions}\r\n          form={form}\r\n          onAction={onAction}\r\n          getSubmissions={getSubmissions}\r\n        />\r\n        <Link className='btn btn-primary' to={`/form/${formId}`}>\r\n          <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\r\n          New {form.title}\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const form = selectRoot('form', state);\r\n  const submissions = selectRoot('submissions', state);\r\n\r\n  return {\r\n    form: form.form,\r\n    submissions: submissions,\r\n    isLoading: form.isActive || submissions.isActive,\r\n    errors: [\r\n      selectError('submissions', state),\r\n      selectError('form', state)\r\n    ]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getSubmissions: (page, query) => dispatch(getSubmissions('submissions', page, query, ownProps.match.params.formId)),\r\n    onAction: (submission, action) => {\r\n     switch(action) {\r\n        case 'view':\r\n        case 'row':\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`));\r\n          break;\r\n        case 'edit':\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`));\r\n          break;\r\n        case 'delete':\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/delete`));\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(List)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../../../../containers/Loading'\r\n\r\nconst View = class extends Component {\r\n  render() {\r\n    const {\r\n      hideComponents,\r\n      onSubmit, options,\r\n      errors,\r\n      form: {form, isActive: isFormActive},\r\n      submission: {submission, isActive: isSubActive, url}\r\n    } = this.props;\r\n\r\n    if (isFormActive || isSubActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>View { form.title } Submission</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', state),\r\n    submission: selectRoot('submission', state),\r\n    options: {\r\n      readOnly: true,\r\n    },\r\n    errors: [\r\n      selectError('submission', state),\r\n      selectError('form', state)\r\n    ],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('submission'));\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../../../../containers/Loading'\r\n\r\nconst Edit = class extends Component {\r\n  render() {\r\n    const {\r\n      hideComponents,\r\n      onSubmit,\r\n      options,\r\n      errors,\r\n      form: {form, isActive: isFormActive},\r\n      submission: {submission, isActive: isSubActive, url}\r\n    } = this.props;\r\n\r\n    if (isFormActive || isSubActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit { form.title } Submission</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n          options={{...{template: 'bootstrap3', iconset: 'fa'},  ...options}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', state),\r\n    submission: selectRoot('submission', state),\r\n    options: {\r\n      noAlerts: true,\r\n    },\r\n    errors: [\r\n      selectError('submission', state),\r\n      selectError('form', state)\r\n    ],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('submission', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('submission'));\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Edit)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Confirm from '../../../../../containers/Confirm';\r\nimport {deleteSubmission, resetSubmissions, selectError, Errors} from 'react-formio';\r\nimport {push, goBack} from 'connected-react-router';\r\n\r\nconst Delete = props => (\r\n  <div>\r\n    <Errors errors={props.errors} />\r\n    <Confirm {...props} />\r\n  </div>\r\n)\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    message: `Are you sure you wish to delete the submission \"${state.submission.submission._id}\"?`,\r\n    errors: [\r\n      selectError('submission', state),\r\n      selectError('form', state)\r\n    ],\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onYes: () => {\r\n      dispatch(deleteSubmission('submission', ownProps.match.params.submissionId, ownProps.match.params.formId, (err) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('submissions'));\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission`));\r\n        }\r\n      }));\r\n    },\r\n    onNo: () => {\r\n      dispatch(goBack());\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Delete)\r\n","import { Link, Route, Switch } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport View from './View'\r\nimport Edit from './Edit'\r\nimport Delete from './Delete'\r\nimport {getSubmission} from \"react-formio\";\r\n\r\nconst Item = class extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      submissionId: ''\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.match.params.submissionId !== prevState.submissionId) {\r\n      nextProps.getSubmission(nextProps.match.params.submissionId);\r\n    }\r\n\r\n    return {\r\n      submissionId: nextProps.match.params.submissionId\r\n    };\r\n  }\r\n  render() {\r\n    const {match: {params: {formId, submissionId}}} = this.props;\r\n    return (\r\n      <div>\r\n        <ul className=\"nav nav-tabs\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/submission`}>\r\n              <i className=\"fa fa-chevron-left\"></i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}`}>\r\n              <i className=\"fa fa-eye\"></i> View\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}/edit`}>\r\n              <i className=\"fa fa-edit\"></i> Edit\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/submission/${submissionId}/delete`}>\r\n              <i className=\"fa fa-trash\"></i> Delete\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path=\"/form/:formId/submission/:submissionId\" component={View} />\r\n          <Route path=\"/form/:formId/submission/:submissionId/edit\" component={Edit} />\r\n          <Route path=\"/form/:formId/submission/:submissionId/delete\" component={Delete} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getSubmission: (id) => dispatch(getSubmission('submission', id, ownProps.match.params.formId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Item)\r\n","import { Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport List from './List'\r\nimport Item from './Item/index'\r\n\r\nconst Form = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path=\"/form/:formId/submission\" component={List} />\r\n      <Route path=\"/form/:formId/submission/:submissionId\" component={Item} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default Form\r\n","import { Link, Route, Switch } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport View from './View'\r\nimport Edit from './Edit'\r\nimport Delete from './Delete'\r\nimport Submission from './Submission/index'\r\nimport { connect } from 'react-redux'\r\nimport { getForm } from 'react-formio'\r\n\r\nconst Item = class extends Component{\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      formId: ''\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.match.params.formId !== prevState.formId) {\r\n      nextProps.getForm(nextProps.match.params.formId);\r\n    }\r\n\r\n    return {\r\n      formId: nextProps.match.params.formId\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {match: {params: {formId}}} = this.props;\r\n    return (\r\n      <div>\r\n        <ul className=\"nav nav-tabs\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/form\">\r\n              <i className=\"fa fa-chevron-left\"></i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}`}>\r\n              <i className=\"fa fa-pencil\"></i> Enter Data\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/submission`}>\r\n              <i className=\"fa fa-list-alt\"></i> View Data\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/edit`}>\r\n              <i className=\"fa fa-edit\"></i> Edit Form\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/form/${formId}/delete`}>\r\n              <i className=\"fa fa-trash\"></i> Delete Form\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path=\"/form/:formId\" component={View} />\r\n          <Route path=\"/form/:formId/edit\" component={Edit} />\r\n          <Route path=\"/form/:formId/delete\" component={Delete} />\r\n          <Route path=\"/form/:formId/submission\" component={Submission} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getForm: (id) => dispatch(getForm('form', id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Item);\r\n","import { Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport List from './List';\r\nimport Create from './Create';\r\nimport Item from './Item/index'\r\n\r\nconst Form = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path=\"/form\" component={List} />\r\n      <Route exact path=\"/form/create\" component={Create} />\r\n      <Route path=\"/form/:formId\" component={Item} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default Form\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport { getForm, getSubmissions, selectRoot, selectError, SubmissionGrid, Errors } from 'react-formio';\r\nimport Loading from '../../containers/Loading';\r\n\r\nconst List = class extends Component {\r\n  componentWillMount() {\r\n    this.props.getForm();\r\n    this.props.getSubmissions(1);\r\n  }\r\n\r\n  render() {\r\n    const {form, submissions, isLoading, onAction, getSubmissions, errors} = this.props\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <Loading />\r\n      );\r\n    }\r\n\r\n    if (errors.length && errors[0] === 'Invalid alias') {\r\n      return (\r\n        <div className=\"alert alert-warning\">\r\n          You have not yet created an Event Resource in your project. Either create an Event Resource with the path of \"event\" or import the src/project.json into your project.\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className='form-index'>\r\n        <h1>Events</h1>\r\n        <Errors errors={errors} />\r\n        <SubmissionGrid\r\n          submissions={submissions}\r\n          form={form}\r\n          onAction={onAction}\r\n          getSubmissions={getSubmissions}\r\n        />\r\n        <Link className='btn btn-primary' to={`/event/create`}>\r\n          <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\r\n          New {form.title}\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const form = selectRoot('form', selectRoot('event', state));\r\n  const submissions = selectRoot('submissions', selectRoot('event', state));\r\n\r\n  return {\r\n    form: form.form,\r\n    submissions: submissions,\r\n    isLoading: form.isActive || submissions.isActive,\r\n    errors: [\r\n      selectError('submissions', selectRoot('event', state)),\r\n      selectError('form', selectRoot('event', state))\r\n    ]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getForm: () => dispatch(getForm('event')),\r\n    getSubmissions: (page, query) => dispatch(getSubmissions('event', page, query)),\r\n    onAction: (submission, action) => {\r\n     switch(action) {\r\n        case 'view':\r\n        case 'row':\r\n          dispatch(push(`/event/${submission._id}`));\r\n          break;\r\n        case 'edit':\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/edit`));\r\n          break;\r\n        case 'delete':\r\n          dispatch(push(`/form/${ownProps.match.params.formId}/submission/${submission._id}/delete`));\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(List)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors, getForm} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../containers/Loading';\r\n\r\nconst View = class extends Component {\r\n  componentWillMount() {\r\n    this.props.getForm();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      submission,\r\n      hideComponents,\r\n      onSubmit,\r\n      errors,\r\n      options,\r\n      form: {form, isActive, url}\r\n    } = this.props;\r\n\r\n    if (isActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>New { form.title }</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          options={options}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', selectRoot('event', state)),\r\n    errors: [\r\n      selectError('form', selectRoot('event', state)),\r\n      selectError('submission', selectRoot('event', state)),\r\n    ],\r\n    options: {\r\n      noAlerts: true\r\n    },\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getForm: () => dispatch(getForm('event')),\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('event', submission, null, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('event'));\r\n          dispatch(push(`/event`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../../containers/Loading'\r\n\r\nconst View = class extends Component {\r\n  render() {\r\n    const {\r\n      hideComponents,\r\n      onSubmit, options,\r\n      errors,\r\n      form: {form, isActive: isFormActive},\r\n      submission: {submission, isActive: isSubActive, url}\r\n    } = this.props;\r\n\r\n    if (isFormActive || isSubActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>View Event</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', selectRoot('event', state)),\r\n    submission: selectRoot('submission', selectRoot('event', state)),\r\n    options: {\r\n      readOnly: true,\r\n    },\r\n    errors: [\r\n      selectError('submission', selectRoot('event', state)),\r\n      selectError('form', selectRoot('event', state))\r\n    ],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('event', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('event'));\r\n          dispatch(push(`/event/${submission._id}`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(View)\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {selectRoot, resetSubmissions, saveSubmission, Form, selectError, Errors} from 'react-formio';\r\nimport {push} from 'connected-react-router';\r\nimport Loading from '../../../containers/Loading'\r\n\r\nconst Edit = class extends Component {\r\n  render() {\r\n    const {\r\n      hideComponents,\r\n      onSubmit,\r\n      options,\r\n      errors,\r\n      form: {form, isActive: isFormActive},\r\n      submission: {submission, isActive: isSubActive, url}\r\n    } = this.props;\r\n\r\n    if (isFormActive || isSubActive) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit Event</h3>\r\n        <Errors errors={errors} />\r\n        <Form\r\n          form={form}\r\n          submission={submission}\r\n          url={url}\r\n          hideComponents={hideComponents}\r\n          onSubmit={onSubmit}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    form: selectRoot('form', selectRoot('event', state)),\r\n    submission: selectRoot('submission', selectRoot('event', state)),\r\n    options: {\r\n      noAlerts: true,\r\n    },\r\n    errors: [\r\n      selectError('submission', selectRoot('event', state)),\r\n      selectError('form', selectRoot('event', state))\r\n    ],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmit: (submission) => {\r\n      dispatch(saveSubmission('event', submission, ownProps.match.params.formId, (err, submission) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('event'));\r\n          dispatch(push(`/event/${submission._id}`))\r\n        }\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Edit)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Confirm from '../../../containers/Confirm';\r\nimport _get from 'lodash/get';\r\nimport {deleteSubmission, resetSubmissions, selectError, Errors} from 'react-formio';\r\nimport {push, goBack} from 'connected-react-router';\r\n\r\nconst Delete = props => (\r\n  <div>\r\n    <Errors errors={props.errors} />\r\n    <Confirm {...props} />\r\n  </div>\r\n)\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    message: `Are you sure you wish to delete the event \"${_get(state, 'event.submission.submission.data.title', '')}\"?`,\r\n    errors: [\r\n      selectError('submission', state),\r\n      selectError('form', state)\r\n    ],\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onYes: () => {\r\n      dispatch(deleteSubmission('event', ownProps.match.params.eventId, null, (err) => {\r\n        if (!err) {\r\n          dispatch(resetSubmissions('event'));\r\n          dispatch(push(`/event`));\r\n        }\r\n      }));\r\n    },\r\n    onNo: () => {\r\n      dispatch(goBack());\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Delete)\r\n","import { Link, Route, Switch } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport View from './View'\r\nimport Edit from './Edit'\r\nimport Delete from './Delete'\r\nimport {getForm, getSubmission} from \"react-formio\";\r\n\r\nconst Item = class extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      eventId: ''\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.match.params.eventId !== prevState.eventId) {\r\n      nextProps.getForm();\r\n      nextProps.getSubmission(nextProps.match.params.eventId);\r\n    }\r\n\r\n    return {\r\n      eventId: nextProps.match.params.eventId\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {match: {params: {eventId}}} = this.props;\r\n    return (\r\n      <div>\r\n        <ul className=\"nav nav-tabs\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/event`}>\r\n              <i className=\"fa fa-chevron-left\"></i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/event/${eventId}`}>\r\n              <i className=\"fa fa-eye\"></i> View\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/event/${eventId}/edit`}>\r\n              <i className=\"fa fa-edit\"></i> Edit\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/event/${eventId}/delete`}>\r\n              <i className=\"fa fa-trash\"></i> Delete\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path=\"/event/:eventId\" component={View} />\r\n          <Route path=\"/event/:eventId/edit\" component={Edit} />\r\n          <Route path=\"/event/:eventId/delete\" component={Delete} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getForm: () => dispatch(getForm('event')),\r\n    getSubmission: (id) => dispatch(getSubmission('event', id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Item)\r\n","import { Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport List from './List'\r\nimport Create from './Create'\r\nimport Item from './Item/index'\r\n\r\nconst Form = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path=\"/event\" component={List} />\r\n      <Route exact path=\"/event/create\" component={Create} />\r\n      <Route path=\"/event/:eventId\" component={Item} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default Form\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'react-formio';\r\nimport { push } from 'connected-react-router'\r\nimport {AppConfig, AuthConfig} from '../../config';\r\nimport { setUser } from 'react-formio';\r\n\r\nconst Login = class  extends Component {\r\n  render() {\r\n    return (\r\n      <Form {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n    src: AppConfig.projectUrl + '/' + AuthConfig.login.form\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmitDone: (submission) => {\r\n      dispatch(push(AuthConfig.authState));\r\n      dispatch(setUser(submission));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login)\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form } from 'react-formio';\r\nimport { AppConfig, AuthConfig } from \"../../config\";\r\nimport { setUser } from \"react-formio\";\r\nimport {push} from \"connected-react-router\";\r\n\r\nconst Register = class extends Component {\r\n  render() {\r\n    return (\r\n      <Form {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    src: AppConfig.projectUrl + '/' + AuthConfig.register.form\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onSubmitDone: (submission) => {\r\n      dispatch(push(AuthConfig.authState));\r\n      dispatch(setUser(submission));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Register)\r\n","import React, {Component} from 'react';\r\nimport NavLink from '../../containers/NavLink';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport {Route} from \"react-router-dom\";\r\nimport {AppConfig} from '../../config';\r\n\r\nconst Auth = class extends Component {\r\n  render() {\r\n    const {location} = this.props;\r\n    return (location.pathname === '/auth') ?\r\n      <div className=\"row\">\r\n        { AppConfig.projectUrl !== 'https://reactstarter.form.io' ?\r\n          <div className=\"col-md-12\">\r\n            <div className=\"alert alert-warning\">You can register a regular user here. To register an Admin user, go to your project in the form.io portal, navigate to the Admin resource and create an Admin.</div>\r\n          </div>\r\n          : null\r\n        }\r\n        <div className=\"col-lg-6 col-md-6\">\r\n          <div className=\"panel panel-primary login-container card\">\r\n            <div className=\"panel-heading card-header\">\r\n              Login\r\n            </div>\r\n            <div className=\"panel-body card-body\">\r\n              <Login />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 col-md-6\">\r\n          <div className=\"panel panel-primary register-container card\">\r\n            <div className=\"panel-heading card-header\">\r\n              Register\r\n            </div>\r\n            <div className=\"panel-body card-body\">\r\n              <Register />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-md-offset-3\">\r\n          <div className=\"panel panel-default card\">\r\n            <div className=\"panel-heading card-header\" style={{paddingBottom: 0, borderBottom: 'none'}}>\r\n              <ul className=\"nav nav-tabs\" style={{borderBottom: 'none'}}>\r\n                <NavLink to={'/auth/login'}>Login</NavLink>\r\n                <NavLink to={'/auth/register'}>Register</NavLink>\r\n              </ul>\r\n            </div>\r\n            <div className=\"panel-body card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <Route path=\"/auth/login\" component={Login} />\r\n                  <Route path=\"/auth/register\" component={Register} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Header from './containers/Header'\r\nimport Footer from './containers/Footer'\r\nimport Home from './views/Home'\r\nimport Form from './views/Form'\r\nimport Event from './views/Event'\r\nimport Auth from './views/Auth/Auth'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n\r\n    <div className=\"container\" id=\"main\">\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/form\" component={Form} />\r\n      <Route path=\"/event\" component={Event} />\r\n      <Route path=\"/auth\" component={Auth} />\r\n    </div>\r\n\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","import Base from 'formiojs/components/_classes/component/Component';\r\nimport editForm from 'formiojs/components/table/Table.form'\r\n\r\nexport default class CheckMatrix extends Base {\r\n  constructor(component, options, data) {\r\n    super(component, options, data);\r\n    this.foo = 'bar';\r\n  }\r\n\r\n  static schema() {\r\n    return Base.schema({\r\n      type: 'checkmatrix',\r\n      numRows: 3,\r\n      numCols: 3\r\n    });\r\n  }\r\n\r\n  static builderInfo = {\r\n    title: 'Check Matrix',\r\n    group: 'basic',\r\n    icon: 'fa fa-table',\r\n    weight: 70,\r\n    documentation: 'http://help.form.io/userguide/#table',\r\n    schema: CheckMatrix.schema()\r\n  }\r\n\r\n  static editForm = editForm\r\n\r\n  /**\r\n   * Render returns an html string of the fully rendered component.\r\n   *\r\n   * @param children - If this class is extendended, the sub string is passed as children.\r\n   * @returns {string}\r\n   */\r\n  render(children) {\r\n    // To make this dynamic, we could call this.renderTemplate('templatename', {}).\r\n\r\n    let tableClass = 'table ';\r\n    ['striped', 'bordered', 'hover', 'condensed'].forEach((prop) => {\r\n      if (this.component[prop]) {\r\n        tableClass += `table-${prop} `;\r\n      }\r\n    });\r\n\r\n    let content = '';\r\n\r\n    for (let i = 0; i < this.component.numRows; i++) {\r\n      let row = '<tr>';\r\n      for (let j = 0; j < this.component.numCols; j++) {\r\n        let cell = '<td>';\r\n\r\n        cell += this.renderTemplate('input', {\r\n          input: {\r\n            type: 'input',\r\n            ref: `${this.component.key}-${i}`,\r\n            attr: {\r\n              id: `${this.component.key}-${i}-${j}`,\r\n              class: 'form-control',\r\n              type: 'checkbox',\r\n            }\r\n          }\r\n        });\r\n\r\n        cell += '</td>';\r\n        row += cell;\r\n      }\r\n      row += '</tr>';\r\n      content += row;\r\n    }\r\n\r\n    // Calling super.render will wrap it html as a component.\r\n    return super.render(`\r\n<table class=${tableClass}>\r\n  <tbody>\r\n     ${content}\r\n  </tbody>\r\n</table>\r\n    `);\r\n  }\r\n\r\n  /**\r\n   * After the html string has been mounted into the dom, the dom element is returned here. Use refs to find specific\r\n   * elements to attach functionality to.\r\n   *\r\n   * @param element\r\n   * @returns {Promise}\r\n   */\r\n  attach(element) {\r\n    const refs = {};\r\n\r\n    for (let i = 0; i < this.component.numRows; i++) {\r\n      refs[`${this.component.key}-${i}`] = 'multiple';\r\n    }\r\n\r\n    this.loadRefs(element, refs);\r\n\r\n    this.checks = [];\r\n    for (let i = 0; i < this.component.numRows; i++) {\r\n      this.checks[i] = Array.prototype.slice.call(this.refs[`${this.component.key}-${i}`], 0);\r\n\r\n      // Attach click events to each input in the row\r\n      this.checks[i].forEach(input => {\r\n        this.addEventListener(input, 'click', () => this.updateValue())\r\n      });\r\n    }\r\n\r\n    // Allow basic component functionality to attach like field logic and tooltips.\r\n    return super.attach(element);\r\n  }\r\n\r\n  /**\r\n   * Get the value of the component from the dom elements.\r\n   *\r\n   * @returns {Array}\r\n   */\r\n  getValue() {\r\n    var value = [];\r\n    for (var rowIndex in this.checks) {\r\n      var row = this.checks[rowIndex];\r\n      value[rowIndex] = [];\r\n      for (var colIndex in row) {\r\n        var col = row[colIndex];\r\n        value[rowIndex][colIndex] = !!col.checked;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Set the value of the component into the dom elements.\r\n   *\r\n   * @param value\r\n   * @returns {boolean}\r\n   */\r\n  setValue(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n    for (var rowIndex in this.checks) {\r\n      var row = this.checks[rowIndex];\r\n      if (!value[rowIndex]) {\r\n        break;\r\n      }\r\n      for (var colIndex in row) {\r\n        var col = row[colIndex];\r\n        if (!value[rowIndex][colIndex]) {\r\n          return false;\r\n        }\r\n        let checked = value[rowIndex][colIndex] ? 1 : 0;\r\n        col.value = checked;\r\n        col.checked = checked;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ReactComponent } from 'react-formio';\r\nimport settingsForm from './ReactExample.settingsForm';\r\n\r\n/**\r\n * An example React component\r\n *\r\n * Replace this with your custom react component. It needs to have two things.\r\n * 1. The value should be stored is state as \"value\"\r\n * 2. When the value changes, call props.onChange(null, newValue);\r\n *\r\n * This component is very simple. When clicked, it will set its value to \"Changed\".\r\n */\r\nconst Example = class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.value\r\n    }\r\n  }\r\n\r\n  setValue = () => {\r\n    this.setState({value: 'Changed'}, () => this.props.onChange(null, this.state.value));\r\n  }\r\n\r\n  render() {\r\n    return  (\r\n      <h1 onClick={this.setValue}>Click Me {this.state.value}</h1>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class ReactExample extends ReactComponent {\r\n  /**\r\n   * This function tells the form builder about your component. It's name, icon and what group it should be in.\r\n   *\r\n   * @returns {{title: string, icon: string, group: string, documentation: string, weight: number, schema: *}}\r\n   */\r\n  static get builderInfo() {\r\n    return {\r\n      title: 'React Example',\r\n      icon: 'square',\r\n      group: 'basic',\r\n      documentation: '',\r\n      weight: -10,\r\n      schema: ReactExample.schema()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This function is the default settings for the component. At a minimum you want to set the type to the registered\r\n   * type of your component (i.e. when you call Components.setComponent('type', MyComponent) these types should match.\r\n   *\r\n   * @param sources\r\n   * @returns {*}\r\n   */\r\n  static schema() {\r\n    return ReactComponent.schema({\r\n      type: 'reactexample',\r\n      label: 'Default Label',\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Defines the settingsForm when editing a component in the builder.\r\n   */\r\n  static editForm = settingsForm;\r\n\r\n  /**\r\n   * This function is called when the DIV has been rendered and added to the DOM. You can now instantiate the react component.\r\n   *\r\n   * @param DOMElement\r\n   * #returns ReactInstance\r\n   */\r\n  attachReact(element) {\r\n    console.log('attachReact', element);\r\n    return ReactDOM.render(\r\n      <Example\r\n        component={this.component} // These are the component settings if you want to use them to render the component.\r\n        value={this.dataValue} // The starting value of the component.\r\n        onChange={this.updateValue} // The onChange event to call when the value changes.\r\n      />,\r\n      element\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Automatically detach any react components.\r\n   *\r\n   * @param element\r\n   */\r\n  detachReact(element) {\r\n    console.log('detachReact', element);\r\n    if (element) {\r\n      ReactDOM.unmountComponentAtNode(element);\r\n    }\r\n  }\r\n}\r\n","import baseEditForm from 'formiojs/components/_classes/component/Component.form';\r\n\r\nexport default (...extend) => {\r\n  return baseEditForm([\r\n    {\r\n      key: 'display',\r\n      components: [\r\n        {\r\n          // You can ignore existing fields.\r\n          key: 'placeholder',\r\n          ignore: true,\r\n        },\r\n        {\r\n          // Or add your own. The syntax is form.io component definitions.\r\n          type: 'textfield',\r\n          input: true,\r\n          label: 'My Custom Setting',\r\n          weight: 12,\r\n          key: 'myCustomSetting', // This will be available as component.myCustomSetting\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      key: 'data',\r\n      components: [],\r\n    },\r\n    {\r\n      key: 'validation',\r\n      components: [],\r\n    },\r\n    {\r\n      key: 'api',\r\n      components: [],\r\n    },\r\n    {\r\n      key: 'conditional',\r\n      components: [],\r\n    },\r\n    {\r\n      key: 'logic',\r\n      components: [],\r\n    },\r\n  ], ...extend);\r\n}\r\n","import CheckMatrix from './CheckMatrix';\r\nimport ReactExample from \"./ReactExample/ReactExample\";\r\n\r\nexport default {\r\n  checkmatrix: CheckMatrix,\r\n  reactexample: ReactExample,\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport store, { history } from './store'\r\nimport { initAuth, Formio, Components } from 'react-formio';\r\nimport App from './App'\r\n\r\nimport components from './components';\r\nimport {AppConfig} from './config';\r\n\r\nimport './styles.scss'\r\n\r\nFormio.setProjectUrl(AppConfig.projectUrl);\r\nFormio.setBaseUrl(AppConfig.apiUrl);\r\nComponents.setComponents(components);\r\n\r\n// Initialize the current user\r\nstore.dispatch(initAuth());\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <div>\r\n        <App />\r\n      </div>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}